
********************강제 형변환(casting)**************************************
************************************************************************
2/4(화)
*데이터형
-상수를 저장하기 위해 예약한 공간들
-기본형 데이터형과 참조형 데이터형 두가지로 제공
기본형 데이터-(primitive type: 변수자체에 값저장)
참조형 데이터-(reference type:값은 메모리에 다른곳에 저장되고 그 시작 주소를 저장)>>>heap이라는 공간에 저장 
heap이란?

-변수를 선언할 때 사용

********기본형 데이터형***************
-생성된 변수 자체에 값이 저장되는 데이터형
ㅣㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		범위		사용예
ㅣ정수	byte			b=0;
ㅣ	short			s=0;
ㅣ	int			i=0;
ㅣ	long			l=0;
ㅣ문자	char	\u0000~\uFFFF	->문자를 할당하면 유니코드 값이 할당된다.
ㅣ실수	float	유효연산 7자리
ㅣ	double	유효연산 15자리
ㅣ불린	boolean
ㅣ
정수 literal 4
문자  ;;   	2
실수  ;; 	8
불린  ;;	1
상수:상수가 메모리에 저장되는 공간의 이름을 literal 이라한다.

자동형변환:데이터형을 자바가상머신((java.exe)->통칭,jvm)이 자동으로 변경하는것
	이 일어나는 경우 
1.변수에 값을 할당하는 경우
2.연산하는 경우

*형명시:사숭뒤에 지정된 문자를 적어 literal의 크기를 일시적으로 변경하는것
ex1)   long l = 300000000L(l) (내가 평소에 궁금히 여겼던것)
	대소문자는 구분하지 않는다.
정수 L ,l 4byte - >8byte로 변경(넣을 값이 4byte보다 클경우 주로 붙인다)
실수 F,f 8byte -> 4byte로 변경
      D,d 8byte->8byte 로 변경 (주로 생략)


***********************문자형***************************************
아스키 코드 :1byte charset->영어권애들을 위해 있던것
유니코드 :2byte charset->영어숫자특문은 아스키 코드와 같다

기본상식 A=65 a=97  0=48 
알트 누르고 숫자누르면 유니코드 의 코드값을 알수 있다.
************************************************************************

********************자동형변환(promotion)**************************************
자동형변환:데이터형을 자바가상머신((java.exe)->통칭,jvm)이 자동으로 변경하는것
	이 일어나는 경우 
1.변수에 값을 할당하는 경우
2.연산하는 경우
-int 의 하위 데이터형이 연산되면 그 결과가 int로 발생한다.
byte + byte = int 
short + short = int

byte + short = int 
(단 byte 가 일단 short 로 바뀌고 결과값이 int 로 바뀌는 과정이 있다.)
byte +int  = int 
(역시 같은맥락)

int + long = long 
(int 보다 큰 long 의 결과가 나온다)

**char c ='a'
 char + int = int 
ex1) char +1 = int 
(char 에 65 가 +1과 더해져 정수형 66이나온다)

char+char = int 가 나온다
 
************************************************************************
********************강제 형변환(casting)**************************************
-데이터형을 개발자가 일시적으로 필요한 데이터형으로 변환하는 것이다.
*주의점*
-형변환에 따라 값손실이 발생 할 수 도 있다.
-기본형 primitive (데이터형)을 참조형으로 데이터형으로 변경하거나 
  그 반대의 경우 에러가 발생 한다.(서로 저장하고 있는 값이 다르다 하나는 값이고 하나는 주소)
-boolean 형은 동일형으로만 강제 형변환이 된다 

문법 (변경할 데이터형) 변수명(상수) ;

************************************************************************
********************Constant**************************************
-변수를 상수처럼 사용할때 (즉, 변하는 변수를 변하지 않게만드는것)
-프로그램 안에서 기준값을 사용할때 사용하게 된다
-정의하는 위치는 클래스의 필드에만 고정하여 정의
-클래스 외부에서 모두 사용가능
문법)
public static final (데이터형) 상수명 = 값;

**상수명은 모든글자를 대문자로 사용한다.(변수와 구분하기 위함)

public-클래스 외부에서 접근가능
static-모든 메모리에서 접근가능
final-값변경 불가능

데이터형- 참조형 기본형 둘다사용가능
-선언시에만 값을 설정할 수 있다.

사용시)
-클래스 안
상수명
클래스명.상수명


-외부 클래스
클래스명.상수명

************************************************************************

********************연산자**************************************
operator )
연산에 사용되는 에약된 부호들


************************************************************************
