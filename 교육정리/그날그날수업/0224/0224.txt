1)상속구조를 알아야하는이유?
-데이터 구조를 효율적으로 사용하기위해
비활성화상태로 선언하고 필요할때마다 활성화시켜 사용하는것

2)오버라이딩 
데이터 오버라이딩->메모리의 효율성때문에 거의 사용하지 않음 
메소드 오버라이딩->자식 메소드에 메소드 오버라이딩이 전부 일어났다면 부모의 메소드는 호출될 일이없고,
그럴때 메소드의 바디 즉 값을 비우고 값이 없는 "추상메소드"로 만든다.
그리고 추상메소드가 하나라도 포함된 클래스를 "추상 클래스"라고한다.

*추상메소드를 하나라도 만들면 추상클래스를 "반드시" 만들어야 하고, 
추상클래스는 자식을 통해 사용이 되기에 객체를 만들수 없다.
또한 추상클래스의 경우 객체를 만들수 없기때문에 생성자 또한 필요없다

3)인터페이스: 추상클래스가 추상메소드로만 구현되어있다면 인터페이스로 바꿔도된다
심지어 인터페이스를 만들었다면 그안의 메소드에 abstract 를 붙이지 않아도된다.

인터페이스중 추상메소드가 많다면 전부 오버라이딩을 사용하여 이용해야된다.
ex ) 7개의 추상메소드 이중 한개 사용이라면 7개 전부 오버라이딩을 해야한다.
->>귀찮음을 해결하기위해 Adapter 클래스를 사용하면 된다.

adapter 클래스는 이미 인터페이스가 구현 되어있어서 
인터페이스의 추상메소드 전부 오버라이딩 할 필요없이 필요한것 만 사용하면된다.

4) 
*Container: window , Frame, Panel, Dialog , ... 그냥 껍데기일뿐이야
 *Component : Button, Radio , TextArea, TextField;... 구성요소입니다 이둘은 UI에 해당
 *+add ~~~ Listener 메소드를 통해 UI와 Event 연결!!: 둘을 연결해 주는 핸들러의 역활
 *Event : 이벤트 인터페이스 (~~Listener)를 이용하여 구현 

5)
inner클래스:
만들어진 클래스의 메소드 자리에 클래스를 넣는것
bin폴더에 저장될때 inner class 의 경우( 클래스명$inner 클래스) 에 해당된다.
Anoymous 의경우 (클래스명&1..)(임시)로 바이트 코드 저장


1)금요일복습, 오버라이딩 개요
2)오버라이딩의 종류,추상메소드,추상클래스
3)인터페이스구현하는법
4)awt클래스와 상속과 인터페이스 사용법
5)inner class로이벤트처리를 분리하기,adapter 클래스 상속받기
6)Button 클래스 LayoutManager 인터페이스 상속받은 layout클래스 이용
7)LoginUI만들기 (JFrame ,JPanel)
